PRIMEROS(<code>)  =  { ε, fn }
PRIMEROS(<code'>)  =  { fn }
PRIMEROS(<function_declaration>)  =  { fn }
PRIMEROS(<function_naming>)  =  { fn }
PRIMEROS(<fn_identifier>)  =  { fn }
PRIMEROS(<function_param>)  =  { ε, ( }
PRIMEROS(<function_params>)  =  { ), identifier }
PRIMEROS(<params>)  =  { identifier }
PRIMEROS(<params'>)  =  { ε, identifier }
PRIMEROS(<comma_variable>)  =  { identifier }
PRIMEROS(<function_return>)  =  { ε, : }
PRIMEROS(<return_type>)  =  { int, float, char, str, bool }
PRIMEROS(<function_body>)  =  { { }
PRIMEROS(<bracket_function>)  =  {  }
PRIMEROS(<function_content>)  =  { ε, let, lem, call, for, ret, identifier, while, if }
PRIMEROS(<function_contents>)  =  { ε, let, lem, call, for, ret, identifier, while, if }
PRIMEROS(<variable_declaration>)  =  { let, lem }
PRIMEROS(<single_variable>)  =  { identifier }
PRIMEROS(<equals_assignment>)  =  { = }
PRIMEROS(<multiple_variable>)  =  { identifier }
PRIMEROS(<multiple_variable'>)  =  { ε, , }
PRIMEROS(<variable>)  =  { identifier }
PRIMEROS(<variable_type>)  =  { : }
PRIMEROS(<assignment>)  =  { identifier }
PRIMEROS(<id_equals>)  =  { identifier }
PRIMEROS(<assignment'>)  =  { value, identifier, call }
PRIMEROS(<operation>)  =  { value, identifier }
PRIMEROS(<operator>)  =  { ε, +, -, *, /, %, ^, &&, ==, !=, >, <, >=, <= }
PRIMEROS(<function_call>)  =  { call }
PRIMEROS(<call_identifier>)  =  { call }
PRIMEROS(<call_body>)  =  { ε, ( }
PRIMEROS(<parenthesis_call>)  =  { value, identifier }
PRIMEROS(<call_params>)  =  { value, identifier }
PRIMEROS(<multiple_call_params>)  =  { ε, , }
PRIMEROS(<if_declaration>)  =  { if }
PRIMEROS(<if_condition>)  =  { if }
PRIMEROS(<else_declaration>)  =  { else }
PRIMEROS(<for_declaration>)  =  { for }
PRIMEROS(<for_condition>)  =  { identifier }
PRIMEROS(<id_in>)  =  { identifier }
PRIMEROS(<range>)  =  { value, identifier }
PRIMEROS(<range_value>)  =  { value, identifier }
PRIMEROS(<range_identifier>)  =  { value, identifier }
PRIMEROS(<value_to>)  =  { value }
PRIMEROS(<identifier_to>)  =  { identifier }
PRIMEROS(<while_declaration>)  =  { while }
PRIMEROS(<flow_body>)  =  { { }
PRIMEROS(<bracket_flow>)  =  { ε, identifier, if, while, call, for }
PRIMEROS(<flow_content>)  =  { ε, identifier, if, while, call, for }
PRIMEROS(<flow_contents>)  =  { ε, identifier, if, while, call, for }
PRIMEROS(<return>)  =  { value, identifier }
PRIMEROS(<data_type>)  =  { int, float, char, str, bool }
PRIMEROS(<operator_char>)  =  { +, -, *, /, %, ^, &&, ||, ==, !=, >, <, >=, <= }
PRIMEROS(<fn>)  =  { fn }
PRIMEROS(<call>)  =  { call }
PRIMEROS(<let>)  =  { let }
PRIMEROS(<lem>)  =  { lem }
PRIMEROS(<if>)  =  { if }
PRIMEROS(<else>)  =  { else }
PRIMEROS(<for>)  =  { for }
PRIMEROS(<while>)  =  { while }
PRIMEROS(<in>)  =  { in }
PRIMEROS(<to>)  =  { to }
PRIMEROS(<ret>)  =  { ret }
PRIMEROS(<identifier>)  =  { identifier }
PRIMEROS(<value>)  =  { value }
PRIMEROS(<oparenthesis>)  =  { ( }
PRIMEROS(<cparenthesis>)  =  { ) }
PRIMEROS(<obracket>)  =  { { }
PRIMEROS(<cbracket>)  =  { } }
PRIMEROS(<colon>)  =  { : }
PRIMEROS(<semicolon>)  =  { ; }
PRIMEROS(<comma>)  =  { , }
PRIMEROS(<equals>)  =  { = }
