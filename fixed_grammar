// $ is void

<code>  ->  <function_declaration> <function_body> | $
<function_declaration>  ->  <function_naming> <function_params>
<function_naming>  ->  <fn> <identifier>
<function_params>  ->  <parenthesis_params> <cparenthesis> | <oparenthesis> <cparenthesis>
<parenthesis_params>  ->  <oparenthesis> <params>
<params>  ->  <identifier> <variable_type> | <variable_comma> <params>
<function_body>  ->  <bracket_function> <function_closure>
<function_closure>  ->  <cbracket> <code> | }
<bracket_function>  ->  <obracket> <function_content>
<function_content>  ->  <variable_declaration> <semicolon> | <assignment> <semicolon> | <function_call> <semicolon> | <if_declaration> <else_declaration> | <for_declaration> <flow_body> | <while_declaration> <flow_body>
<variable_declaration>  ->  <let> <variables> | <lem> <variables>
<variables>  ->  <variable_comma> <variables> | <var_assignment> <variables> | <identifier> <variable_type> | <variable> <variable_assignment>
<var_assignment>  ->  <variable> <variable_assignment>
<variable_assignment>  ->  <assignment> <comma> | <id_equals> <operation>
<variable>  ->  <identifier> <variable_type>
<variable_type>  ->  <colon> <data_type>
<assignment>  ->  <id_equals> <operation>
<id_equals>  ->  <identifier> <equals>
<operation>  ->  <value> <operator> | <identifier> <operator> | value | identifier
<operator>  ->  <operator_char> <operation>
<function_call>  ->  <identifier> <call_body>
<call_body>  ->  <parenthesis_call> <cparenthesis> | <oparenthesis> <cparenthesis>
<parenthesis_call>  ->  <oparenthesis> <call_params>
<call_params>  ->  <operation_comma> <call_params> | <value> <operator> | <identifier> <operator> | value | identifier
<operation_comma>  ->  <operation> <comma>
<if_declaration>  ->  <if_condition> <flow_body>
<if_condition>  ->  <if> <operation>
<else_declaration>  ->  <else> <flow_body>
<for_declaration>  ->  <for> <for_condition>
<for_condition>  ->  <id_in> <range>
<id_in>  ->  <identifier> <in>
<range>  ->  <value_to> <value> | <identifier_to> <identifier> | <value_to> <identifier> | <identifier_to> <value>
<value_to>  ->  <value> <to>
<identifier_to>  ->  <identifier> <to>
<while_declaration>  ->  <while> <operation>
<flow_body>  ->  <bracket_flow> <cbracket> | <obracket> <cbracket>
<bracket_flow>  ->  <obracket> <flow_content>
<flow_content>  ->  <assignment> <semicolon> | <function_call> <semicolon> | <if_declaration> <else_declaration> | <for_declaration> <flow_body> | <while_declaration> <flow_body>
<variable_comma>  ->  <variable> <comma>
<data_type>  ->  int | float | char | str | bool
<operator_char>  ->  + | * | / | % | ^ | && | || | == | != | > | < | >= | <=
<fn>  ->  fn
<let>  ->  let
<lem>  ->  lem
<if>  ->  if
<else>  ->  else
<for>  ->  for
<while>  ->  while
<in>  ->  in
<to>  ->  to
<identifier>  ->  identifier
<value>  ->  value
<oparenthesis>  ->  (
<cparenthesis>  ->  )
<obracket>  ->  {
<cbracket>  ->  }
<colon>  ->  :
<semicolon>  ->  ;
<comma>  ->  ,
<equals>  ->  =
