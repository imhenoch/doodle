<code>  ->  <code'> <code> | ε
<code'>  ->  <function_declaration> <function_body>
<function_declaration>  ->  <function_naming> <function_return>
<function_naming>  ->  <fn_identifier> <function_param>
<fn_identifier>  ->  <fn> <identifier>
<function_param>  ->  <oparenthesis> <function_params> | ε
<function_params>  ->  <params> <cparenthesis> | )
<params>  ->  <variable> <params'>
<params'>  ->  <comma_variable> <params> | ε
<comma_variable>  ->  <variable> <comma>
<function_return>  ->  <colon> <return_type> | ε
<return_type>  ->  int | float | char | str | bool
<function_body>  ->  <bracket_function> <cbracket>
<bracket_function>  ->  <obracket> <function_content>
<function_content>  ->  <variable_declaration> <semicolon> | <assignment> <semicolon> | <function_call> <semicolon> | <if_declaration> <else_declaration> | <for_declaration> <flow_body> | <while_declaration> <flow_body> | <ret> <return>
<variable_declaration>  ->  <let> <multiple_variable> | <lem> <multiple_variable>
<single_variable>  ->  <variable> <assignment>
<multiple_variable>  ->  <single_variable> <multiple_variable>
<variable>  ->  <identifier> <variable_type>
<variable_type>  ->  <colon> <data_type>
<assignment>  ->  <id_equals> <operation>
<id_equals>  ->  <identifier> <equals>
<operation>  ->  <value> <operator> | <identifier> <operator>
<operator>  ->  <operator_char> <operation> | ε
<function_call>  ->  <call_identifier> <call_body>
<call_identifier>  ->  <call> <identifier>
<call_body>  ->  <oparenthesis> <parenthesis_call> | ε
<parenthesis_call>  ->  <call_params> <cparenthesis>
<call_params>  ->  <operation> <multiple_call_params>
<multiple_call_params>  ->  <comma> <multiple_call_params> | ε
<if_declaration>  ->  <if_condition> <flow_body>
<if_condition>  ->  <if> <operation>
<else_declaration>  ->  <else> <flow_body>
<for_declaration>  ->  <for> <for_condition>
<for_condition>  ->  <id_in> <range>
<id_in>  ->  <identifier> <in>
<range>  ->  <value_to> <range_value> | <identifier_to> <range_identifier>
<range_value>  ->  value | identifier
<range_identifier>  ->  value | identifier
<value_to>  ->  <value> <to>
<identifier_to>  ->  <identifier> <to>
<while_declaration>  ->  <while> <operation>
<flow_body>  ->  <obracket> <bracket_flow>
<bracket_flow>  ->  <flow_content> <cbracket>
<flow_content>  ->  <flow_contents> <flow_content> | ε
<flow_contents>  ->   <assignment> <semicolon> | <function_call> <semicolon> | <if_declaration> <else_declaration> | <for_declaration> <flow_body> | <while_declaration> <flow_body>
<return>  ->  <operation> <semicolon>
<data_type>  ->  int | float | char | str | bool
<operator_char>  ->  + | - | * | / | % | ^ | && | || | == | != | > | < | >= | <=
<fn>  ->  fn
<call>  ->  call
<let>  ->  let
<lem>  ->  lem
<if>  ->  if
<else>  ->  else
<for>  ->  for
<while>  ->  while
<in>  ->  in
<to>  ->  to
<ret>  ->  ret
<identifier>  ->  identifier
<value>  ->  value
<oparenthesis>  ->  (
<cparenthesis>  ->  )
<obracket>  ->  {
<cbracket>  ->  }
<colon>  ->  :
<semicolon>  ->  ;
<comma>  ->  ,
<equals>  ->  =
